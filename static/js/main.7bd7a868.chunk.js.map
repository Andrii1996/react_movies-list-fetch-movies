{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movie.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_URL","getMoviesByTitle","a","fetch","respons","json","FindMovie","React","memo","addMovie","hasMovie","useState","setMovie","setTitle","error","setError","findedMovie","Title","Plot","Poster","imdbID","console","warn","htmlFor","type","id","placeholder","classNames","value","onChange","useCallback","target","onClick","disabled","App","data","setMovies","currentMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bd7a868.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_KEY = 'db946b80';\nconst API_URL = 'https://www.omdbapi.com/';\n\nexport async function getMoviesByTitle(title) {\n  const respons = await fetch(`${API_URL}?apikey=${API_KEY}&t=${title}`);\n\n  return respons.json();\n}\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMoviesByTitle } from '../../api/movie';\n\nexport const FindMovie = React.memo(({ addMovie, hasMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(null);\n\n  async function getMovie() {\n    try {\n      const findedMovie = await getMoviesByTitle(title);\n\n      if (!findedMovie.Title) {\n        setError('Can\\'t find a movie with such a title');\n        setMovie(null);\n\n        return;\n      }\n\n      setMovie({\n        title: findedMovie.Title,\n        description: findedMovie.Plot,\n        imgUrl: findedMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${findedMovie.imdbID}`,\n        imdbId: findedMovie.imdbID,\n      });\n    } catch (Error) {\n      // eslint-disable-next-line no-console\n      console.warn(Error);\n    }\n  }\n\n  function handleSubmit() {\n    if (hasMovie(movie)) {\n      setError('This movie have already');\n\n      return;\n    }\n\n    addMovie(movie);\n    setTitle('');\n    setMovie(null);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              value={title}\n              onChange={useCallback(\n                ({ target }) => setTitle(target.value),\n                [],\n              )}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={handleSubmit}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n});\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  hasMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    setMovies(currentMovies => [...currentMovies, movie]);\n  };\n\n  // eslint-disable-next-line max-len\n  const hasMovie = movie => movies.some(({ imdbId }) => imdbId === movie.imdbId);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} hasMovie={hasMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}